Excersises:
0)[print_args.c] Write a program that prints all the arguments passed to it.
   	 -Loops,variables,printf
1)[print_file_by_lines.c] Write a program that opens a text-file. Print the contents of the file to the terminal.
   	 -fopen,string library
2)[lower_to_upper_FILE.c] Write a program that reads a lower case input FILE. The program should then output an upper case version of the FILE.
   	 -fopen,string,ctype
3)[args_to_arrary_malloc.c] Write a program that takes an arbitrary sized vector of numbers. Store the numbers in an array. The size of this array must be dynamically set; NOT KNOWN AT COMPILE TIME. 
  Example of program call: ./program 3 4 2  
  Example output: a[0]=3   a[1]=4    a[2]=2
   	 -malloc,pointers
4)[htoi.c] Atoi converts 0-9 ASCII characters into int-type variables. Make a program, htoi, that includes hexadecimal digits: 0-F.
5)[inverseLines.c] Inverse the lines of a text file. Create a new file to store the output.
6)[multi-d-pointers.c] Use multi-demensional pointers to store a list of names and numbers. Write a function that accepts the multi-deminsional pointer and re-arranges the names in alphabetical order
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Challenges:
0) Write a program that exists in multiple files. From your main(), you should make calls to other functions you have written.

EXAMPLES:
	FUNCTIONS:	[functions.c]
	STRUCTURES:	[structures.c]